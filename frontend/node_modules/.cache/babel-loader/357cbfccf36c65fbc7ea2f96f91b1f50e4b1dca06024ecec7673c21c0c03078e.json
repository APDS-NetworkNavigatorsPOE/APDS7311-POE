{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thivarshan Govender\\\\Visual Code\\\\APDS\\\\frontend\\\\src\\\\components\\\\auth\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/login', {\n        username,\n        password\n      });\n      localStorage.setItem('token', response.data.token);\n\n      // Here, you should also retrieve customer ID and account number from the response if available\n      // This example assumes the API sends back the customer ID and account number upon successful login\n      localStorage.setItem('customerID', response.data.customerID); // Assuming your API returns customerID\n      localStorage.setItem('accountNumber', response.data.accountNumber); // Assuming your API returns accountNumber\n\n      navigate(\"/customers\");\n    } catch (err) {\n      if (err.response) {\n        setError(err.response.data.message);\n      } else {\n        setError('Something went wrong. Please try again.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        autoComplete: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        autoComplete: \"current-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Login, \"PRk3rkn/Zq+a3Ceqt4taaWXn0UQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","username","setUsername","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","response","post","localStorage","setItem","data","token","customerID","accountNumber","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","autoComplete","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Thivarshan Govender/Visual Code/APDS/frontend/src/components/auth/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/auth/login', { username, password });\r\n            localStorage.setItem('token', response.data.token);\r\n\r\n            // Here, you should also retrieve customer ID and account number from the response if available\r\n            // This example assumes the API sends back the customer ID and account number upon successful login\r\n            localStorage.setItem('customerID', response.data.customerID); // Assuming your API returns customerID\r\n            localStorage.setItem('accountNumber', response.data.accountNumber); // Assuming your API returns accountNumber\r\n\r\n            navigate(\"/customers\");\r\n        } catch (err) {\r\n            if (err.response) {\r\n                setError(err.response.data.message);\r\n            } else {\r\n                setError('Something went wrong. Please try again.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Login Page</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"username\">Username:</label>\r\n                <input type='text' id='username' value={username} onChange={(e) => setUsername(e.target.value)} autoComplete='username' />\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <input type='password' id='password' value={password} onChange={(e) => setPassword(e.target.value)} autoComplete='current-password' />\r\n                {error && <p style={{ color: 'red' }}>{error}</p>}\r\n                <button type='submit'>Login</button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}