{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thivarshan Govender\\\\Visual Code\\\\APDS\\\\frontend\\\\src\\\\components\\\\auth\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [fullName, setFullName] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [IDNumber, setIDNumber] = useState('');\n  const [accountNumber, setAccountNumber] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/register', {\n        fullName,\n        username,\n        email,\n        IDNumber,\n        accountNumber,\n        password\n      });\n      if (response.status === 201) {\n        // Save the customer ID and account number in local storage\n        localStorage.setItem('customerID', IDNumber); // Assuming IDNumber is the customer ID\n        localStorage.setItem('accountNumber', accountNumber);\n        navigate('/');\n      }\n    } catch (err) {\n      if (err.response) {\n        setError(err.response.data.message);\n      } else {\n        setError('Something went wrong. Please try again.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fullName\",\n        children: \"Full Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"fullName\",\n        value: fullName,\n        onChange: e => setFullName(e.target.value),\n        required: true,\n        autoComplete: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true,\n        autoComplete: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true,\n        autoComplete: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"IDNumber\",\n        children: \"ID Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"IDNumber\",\n        value: IDNumber,\n        onChange: e => setIDNumber(e.target.value),\n        required: true,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"accountNumber\",\n        children: \"Account Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"accountNumber\",\n        value: accountNumber,\n        onChange: e => setAccountNumber(e.target.value),\n        required: true,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"ZoLmZFtEZqvMpNdeus0HjOB66Xo=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Register","_s","fullName","setFullName","username","setUsername","email","setEmail","IDNumber","setIDNumber","accountNumber","setAccountNumber","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","response","post","status","localStorage","setItem","err","data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","autoComplete","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Thivarshan Govender/Visual Code/APDS/frontend/src/components/auth/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Register() {\r\n    const [fullName, setFullName] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [IDNumber, setIDNumber] = useState('');\r\n    const [accountNumber, setAccountNumber] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/auth/register', {\r\n                fullName,\r\n                username,\r\n                email,\r\n                IDNumber,\r\n                accountNumber,\r\n                password,\r\n            });\r\n            if (response.status === 201) {\r\n                // Save the customer ID and account number in local storage\r\n                localStorage.setItem('customerID', IDNumber); // Assuming IDNumber is the customer ID\r\n                localStorage.setItem('accountNumber', accountNumber);\r\n                navigate('/');\r\n            }\r\n        } catch (err) {\r\n            if (err.response) {\r\n                setError(err.response.data.message);\r\n            } else {\r\n                setError('Something went wrong. Please try again.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Register</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"fullName\">Full Name</label>\r\n                <input type=\"text\" id=\"fullName\" value={fullName} onChange={e => setFullName(e.target.value)} required autoComplete=\"name\" />\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input type=\"text\" id=\"username\" value={username} onChange={e => setUsername(e.target.value)} required autoComplete=\"username\" />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" value={email} onChange={e => setEmail(e.target.value)} required autoComplete=\"email\" />\r\n                <label htmlFor=\"IDNumber\">ID Number</label>\r\n                <input type=\"text\" id=\"IDNumber\" value={IDNumber} onChange={e => setIDNumber(e.target.value)} required autoComplete=\"off\" />\r\n                <label htmlFor=\"accountNumber\">Account Number</label>\r\n                <input type=\"text\" id=\"accountNumber\" value={accountNumber} onChange={e => setAccountNumber(e.target.value)} required autoComplete=\"off\" />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" value={password} onChange={e => setPassword(e.target.value)} required />\r\n                {error && <p style={{ color: 'red' }}>{error}</p>}\r\n                <button type='submit'>Register</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}